<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guithub.mappers.mem.member">
	
	<!-- 로그인-->
	<select id="login" resultType="com.guithub.domain.member.MemberVO">
		select * from member
			where id = #{id} and password = #{password}
	</select>
	
	<!-- 현재 회원의 게시판 별 작성 게시물 총 개수 -->
	<select id="getBoardPostCnt" resultType="int">
		select count(id) from post_${board}
		<if test='field.equals("title")'>
			where title like '%${keyword}%'
		</if>
		<if test='field.equals("title_content")'>
		    where title like '%${keyword}%' or content like '%${keyword}%'
		</if>
			and writer_id = #{nickname}
		<if test='board.equals("general")'>
			and password is null
		</if>
	</select>
	
	<!-- 현재 회원의 게시판 별 작성 댓글 총 개수 -->
	<select id="getBoardReplyCnt" resultType="int">
		select count(id) from post_${board}
		    where content like '%${keyword}%' and writer_id = #{nickname}
		<if test='board.equals("general")'>
			and password is null
		</if>
	</select>
	
	<!-- 자유게시판 관련 쿼리 -->
	<!-- 현재 회원의 자유 게시판 작성 게시물 목록 -->
	<select id ="getGeneralList" resultType="com.guithub.domain.board.general.PostVO_view">
		select * from (
		       	select rownum num, n.* 
		        from (select * from post_general_view 
		        <if test='field.equals("title")'>
		        	where title like '%${keyword}%'
		        </if>
		        <if test='field.equals("title_content")'>
		        	where title like '%${keyword}%' or content like '%${keyword}%'
		        </if>
		        	and writer_id = #{nickname} and password is null
		        	order by regdate desc)n
		        )
		    where num between #{startRowNum} and #{endRowNum}
	</select>
	
	<!-- 현재 회원의 자유 게시판 작성 댓글 목록 -->
	<select id ="getGeneralReplyList" resultType="com.guithub.domain.board.general.ReplyVO">
		select * from (
		       	select rownum num, n.* 
		        from (select * from reply_general
		        	where content like '%${keyword}%'
		        	and writer_id = #{nickname} and password is null
		        	order by regdate desc)n
		        )
		    where num between #{startRowNum} and #{endRowNum}
	</select>		
	
	<!-- 타브게시판 관련 쿼리 -->	
	<!-- 현재 회원의 타브 게시판 작성 게시물 목록 -->
	<select id ="getTabList" resultType="com.guithub.domain.board.tab.PostVO_view">
		select * from (
		       	select rownum num, n.* 
		        from (select * from post_tab_view 
		        <if test='field.equals("title")'>
		        	where title like '%${keyword}%'
		        </if>
		        <if test='field.equals("title_content")'>
		        	where title like '%${keyword}%' or content like '%${keyword}%'
		        </if>
		        	and writer_id = #{nickname} order by regdate desc)n
		        )
		    where num between #{startRowNum} and #{endRowNum}
	</select>
		
	<!-- 현재 회원의 타브 게시판 작성 댓글 목록 -->
	<select id ="getTabReplyList" resultType="com.guithub.domain.board.tab.ReplyVO">
		select * from (
		       	select rownum num, n.* 
		        from (select * from reply_tab
		        	where content like '%${keyword}%'
		        	and writer_id = #{nickname} order by regdate desc)n
		        )
		    where num between #{startRowNum} and #{endRowNum}
	</select>	
	
	<!-- 회원가입 아이디 중복확인 -->
	<select id="checkIdDup" resultType="boolean">
		select count(id) from member
			where id = #{id}
	</select>
	<!-- 회원가입 닉네임 중복확인 -->
	<select id="checkNickDup" resultType="boolean">
		select count(id) from member
			where nickname = #{nickname}	
	</select>
	<!-- 회원등록 -->
	<insert id="regMember" parameterType="com.guithub.domain.member.MemberVO">
		insert into member(id, password, nickname, email)
			values(#{id}, #{password}, #{nickname}, #{email})
	</insert>
	<!-- 회원삭제 -->
	<delete id="delMember" parameterType="String">
		delete from member
			where id = #{id}
	</delete>
</mapper>